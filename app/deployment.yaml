apiVersion: v1
kind: Service
metadata:
  name: election-service
spec:
  selector:
    app: leader-election-python
  ports:
#    - name: "tcp1"
#      protocol: "TCP"
#      nodePort: 30000
#      port: 5010
#      targetPort: 5000

    - name: "tcp2"
      protocol: "TCP"
      nodePort: 30001
      port: 5011
      targetPort: 5001

    - name: "tcp3"
      protocol: "TCP"
      nodePort: 30002
      port: 5012
      targetPort: 5002

  type: LoadBalancer

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: system
data:
  mutex: "5011"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: leader-election-python
spec:
  selector:
    matchLabels:
      app: leader-election-python
  replicas: 1
  template:
    metadata:
      labels:
        app: leader-election-python
    spec:
      containers:
#      - name: leader-election-python-0
#        image: leader-election-python-0:latest
#        imagePullPolicy: Never
#        ports:
#        - containerPort: 5000
#        env:
#          - name: MUTEX                         
#            valueFrom:
#              configMapKeyRef:
#                name: system 
#                key: mutex
#          - name: PORT_CONFIG
#            value: "5010"
#        volumeMounts:
#        - name: config
#          mountPath: "/config"
#          readOnly: true
    
      - name: leader-election-python-1
        image: leader-election-python-1:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5001
        env:
          - name: MUTEX                         
            valueFrom:
              configMapKeyRef:
                name: system 
                key: mutex
          - name: PORT_CONFIG
            value: "5011"
          - name: INTERNAL_PORT
            value: "5001"
          - name: NUM_HOST
            value: "6"
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true

      - name: leader-election-python-2
        image: leader-election-python-2:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5002
        env:
          - name: MUTEX                         
            valueFrom:
              configMapKeyRef:
                name: system  
                key: mutex
          - name: PORT_CONFIG
            value: "5012"
          - name: NUM_HOST
            value: "6"
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true
      
      volumes:
      - name: config
        configMap:
          name: system      

